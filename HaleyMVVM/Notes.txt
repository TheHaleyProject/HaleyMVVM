
### 1 --- ADDING CONVERTERS

############ ONLY CONVERTERS FROM HALEY.MVVM ############
  <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Haley.MVVM;component/Dictionaries/haleyConverters.xaml"/>
  </ResourceDictionary.MergedDictionaries>

############# ALL UI RESOURCES FROM HALEY.WPF ############
FOR USING HALEY.WPF RESOURCES: When using Haley.WPF, please add the below resource dictionary directly. In that case, adding converter is not required as it is already added to haley RD.

  <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Haley.WPF;component/Dictionaries/haleyRD.xaml"/>
  </ResourceDictionary.MergedDictionaries>

******CODE******

#### 2 ---- MODELS:

1. ChangeNotifier - For Managing Changes. Use OnPropertyChanged() or SetProp() methods.

2. EventToCommand - For attaching commands to events in XAML (using interaction).

3. NotifiableCollection - For Using an observable collection to notify changes inside the properties of the elements.

4. IocAP - For Haley Attached properties (to be used in conjunction with HaleyContainers). To use in xaml.

5. BaseVM  - Use this base clss (which extends ChangeNotifier)

#### 3 ---- CONTAINERS:

1. Use, "ContainerStore.Windows" to register and use windows.

2. Use, "ContainerStore.Controls" to register and use controls.

3. Use, "ContainerStore.DI" to register and resolve for dependency injection cases.

#### 4 ---- NOTIFICATION / DIALOG SERVICE:

1. By default, the dialog service will be registered to containerstore di. Use "var _dservice = ContainerStore.DI.Resolve<IDialogService>()" to get the dialog service. 

#### 5 ---- IMAGE UTILS.

A fully functional image utility is added and can be accessed by the static class "ImageUtils". It is helpful for converting images, reducing pixels and size etc.


#### Available Converters #####
    <cnv:BoolToIntConverter x:Key="Bool2Int"/>
    <cnv:BoolToVisibilityConverter x:Key="BooltoVisibility"/>
    <cnv:ColorToBrushConverter x:Key="ColorToBrush"/>
    <cnv:DictionaryValueFetchConveter x:Key="DictionaryValueFetcher"/>
    <cnv:EnumListToDescriptionListConverter x:Key="EnumListoStringList"/>
    <cnv:EnumToDescriptionConverter x:Key="EnumtoDescription"/>
    <cnv:EnumTypeToDescriptionListConverter x:Key="EnumTypeToDescriptionList"/>
    <cnv:EnumTypeToValuesConverter x:Key="EnumTypeToValues"/>
    <cnv:EqualityCheckConverter x:Key="EqualityCheck"/>
    <cnv:EqualityCheckToVisibilityConverter x:Key="EqualityToVisibility"/>
    <cnv:HalfValueConverter x:Key="HalfValue"/>
    <cnv:IntToBoolConverter x:Key="Int2Bool"/>
    <cnv:InverseBooleanConverter x:Key="InverseBoolean"/>
    <cnv:InverseValueToVisbilityConverter x:Key="InverseValue2Visibility"/>
    <cnv:KeyToControlConverter x:Key="KeytoControl"/>
    <cnv:MultiBindingEqualityCheckConverter x:Key="MultiBindingEqualityCheck"/>
    <cnv:MultiBindingValueCheckerConverter x:Key="MultiBindingValueCheck"/>
    <cnv:MultiValueBinderConverter x:Key="MultiBinder"/>
    <cnv:NegateValueConverter x:Key="NegateValue"/>
    <cnv:Null2VisibilityConverter x:Key="Null2Visibility"/>
    <cnv:NullCheckerConverter x:Key="NullChecker"/>
    <cnv:ReducerConverter x:Key="LengthReducer"/>
    <cnv:ScrollLimitConverter x:Key="ScrollLimit"/>
    <cnv:ToStringConverter x:Key="ToString"/>
    <cnv:ValueToVisibilityConverter x:Key="Value2Visibility"/>
    <cnv:VerificationConverter x:Key="Verification"/>



